<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.css"/>
    <!-- 开启注解模式 -->
    <context:annotation-config/>
    <!-- 不拦截静态资源 -->
    <mvc:default-servlet-handler/>
    <!-- 定义拦截器 -->
    <mvc:annotation-driven/>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>


    <!-- 启动aop注解 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
          <property name="driverClassName" value="${driver}"/>
          <property name="url" value="${url}"/>
      </bean>
       -->
    <!-- mysqlDataSource -->
    <bean id="mysqlDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据库连接 -->
        <property name="driverClassName" value="${mysql.jdbc.driver}"/>
        <property name="url" value="${mysql.jdbc.jdbcUrl}"/>
        <property name="username" value="${mysql.jdbc.user}"/>
        <property name="password" value="${mysql.jdbc.password}"/>

        <property name="filters" value="stat"/>
        <!-- 连接池设置 -->
        <property name="initialSize" value="2"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="30000"/>
        <property name="poolPreparedStatements" value="false"/>
        <property name="defaultAutoCommit" value="false"/>

        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x' from dual"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
    </bean>
    <!-- 配置数据源master -->
    <bean id="postsqlDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <!-- 数据库连接 -->
        <property name="driverClassName" value="${post.jdbc.driver}"/>
        <property name="url" value="${post.jdbc.jdbcUrl}"/>
        <property name="username" value="${post.jdbc.user}"/>
        <property name="password" value="${post.jdbc.password}"/>

        <property name="filters" value="stat"/>
        <!-- 连接池设置 -->
        <property name="initialSize" value="2"/>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="30000"/>
        <property name="poolPreparedStatements" value="false"/>
        <property name="defaultAutoCommit" value="false"/>

        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
    </bean>
    <bean id="dataSource" class="com.css.util.ThreadLocalRountingDataSource">
        <property name="targetDataSources">
            <map key-type="com.css.enums.DataSourceEnum">
                <entry key="MYSQL" value-ref="mysqlDataSource"/>
                <entry key="POSTSQL" value-ref="postsqlDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="postsqlDataSource"></property>

    </bean>

    <!-- 配置SQLSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>

    </bean>

    <!-- 接口方式 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.css.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

</beans>